syntax = "proto3";

import "google/protobuf/empty.proto";
import "cloudstate/entity_key.proto";
import "google/api/annotations.proto";

package billing;

option go_package = "github.com/JoeQiao666/billing;billing";

message Price {
  string product_id = 1;
  string product_name = 2;
  int32 price = 3;
}

message Prices {
  repeated Price prices = 1;
}

message AddOrUpdatePrices {
  string billing_center_id = 1 [(.cloudstate.entity_key) = true];
  repeated Price prices = 2;
}

message DeletePrices {
  string billing_center_id = 1 [(.cloudstate.entity_key) = true];
  repeated Price prices = 2;
}

message QueryPrices {
  string billing_center_id = 1 [(.cloudstate.entity_key) = true];
}

message Product {
  string product_id = 1;
  string name = 2;
  int32 quantity = 3;
}

message CalculatePrice {
  string billing_center_id = 1 [(.cloudstate.entity_key) = true];
  repeated Product products = 2;
}

message ProductsWithTotalPrice {
  repeated Product products = 1;
  int32 totalPrice = 2;
}

service Billing {
  rpc AddOrUpdateProductsPrices(AddOrUpdatePrices) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/billing/{billing_center_id}/prices/addOrUpdate",
      body: "*",
    };
  }

  rpc DeleteProductsPrices(DeletePrices) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/billing/{billing_center_id}/prices/delete",
      body: "*",
    };
  }

  rpc GetPrices(QueryPrices) returns (Prices) {
    option (google.api.http) = {
      get: "/billing/{billing_center_id}/prices",
      response_body: "prices"
    };
  }

  rpc CalculateTotalPrice(CalculatePrice) returns (ProductsWithTotalPrice) {
    option (google.api.http) = {
      post: "/billing/{billing_center_id}/prices/calculate",
      body: "*",
    };
  }
}